"""empty message

Revision ID: 3bcb58bde0c9
Revises: None
Create Date: 2016-03-06 03:28:47.150706

"""

# revision identifiers, used by Alembic.
revision = '3bcb58bde0c9'
down_revision = None

from alembic import op
import sqlalchemy as sa
import geoalchemy2


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_first_name'), 'client', ['first_name'], unique=False)
    op.create_index(op.f('ix_client_last_name'), 'client', ['last_name'], unique=False)
    op.create_table('lot_price',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('price_per_sq_mtr', sa.Float(), nullable=True),
    sa.Column('date_price_effective', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('section',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=10), nullable=True),
    sa.Column('area', geoalchemy2.types.Geometry(geometry_type='POLYGON'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_section_name'), 'section', ['name'], unique=False)
    op.create_table('block',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=10), nullable=True),
    sa.Column('area', geoalchemy2.types.Geometry(geometry_type='POLYGON'), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['section.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_block_name'), 'block', ['name'], unique=False)
    op.create_table('lot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('block_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('area', geoalchemy2.types.Geometry(geometry_type='POLYGON'), nullable=False),
    sa.Column('dimension', sa.String(length=20), nullable=True),
    sa.Column('lot_area', sa.Float(), nullable=True),
    sa.Column('price_per_sq_mtr', sa.Float(), nullable=True),
    sa.Column('date_purchased', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['block_id'], ['block.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lot_block_id'), 'lot', ['block_id'], unique=False)
    op.create_index(op.f('ix_lot_client_id'), 'lot', ['client_id'], unique=False)
    op.create_index(op.f('ix_lot_status'), 'lot', ['status'], unique=False)
    op.create_table('deceased',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('date_of_death', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['lot_id'], ['lot.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deceased_first_name'), 'deceased', ['first_name'], unique=False)
    op.create_index(op.f('ix_deceased_last_name'), 'deceased', ['last_name'], unique=False)
    op.create_index(op.f('ix_deceased_lot_id'), 'deceased', ['lot_id'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_deceased_lot_id'), table_name='deceased')
    op.drop_index(op.f('ix_deceased_last_name'), table_name='deceased')
    op.drop_index(op.f('ix_deceased_first_name'), table_name='deceased')
    op.drop_table('deceased')
    op.drop_index(op.f('ix_lot_status'), table_name='lot')
    op.drop_index(op.f('ix_lot_client_id'), table_name='lot')
    op.drop_index(op.f('ix_lot_block_id'), table_name='lot')
    op.drop_table('lot')
    op.drop_index(op.f('ix_block_name'), table_name='block')
    op.drop_table('block')
    op.drop_index(op.f('ix_section_name'), table_name='section')
    op.drop_table('section')
    op.drop_table('lot_price')
    op.drop_index(op.f('ix_client_last_name'), table_name='client')
    op.drop_index(op.f('ix_client_first_name'), table_name='client')
    op.drop_table('client')
    ### end Alembic commands ###
